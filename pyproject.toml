[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"

[tool.poetry]
name = "profile-extraction"
version = "1.0.0"
description = ""
authors = ["André Büsgen <buesgen@fh-aachen.de>"]
license = "MIT"

[tool.poetry.dependencies]
python = "~3.8"
click = "^8.0.3"
torch = "1.10.1"
flair = "^0.10"
s3fs = "^2021.11.1"
boto3 = ">=1.0.0"
dvc = "^2.9.3"
pydantic = "^1.8.0"
plotly = "^5.5.0"
dominate = "^2.6.0"
pandas = "1.3.0"
scikit-learn = "^1.0.2"
tqdm = "^4.62.3"
sshfs = "^2021.11.2"
bcrypt = "^3.2.0"
numpy = "^1.22.2"
kaleido = "0.2.1"
spacy = "^3.2.2"
openpyxl = "^3.0.9"
srsly = "^2.4.2"

[tool.poetry.dev-dependencies]
mypy = "^0.910"
pytest = "^6.2.5"
pre-commit = "^2.16.0"
commitizen = "^2.20.0"
pytest-cov = "^3.0.0"
pylint = "^2.12.2"
jupyterlab = "^3.3.2"

[tool.poetry.scripts]
data_split = "profile_extraction.util.main:perform_split"
create_text_corpus = "profile_extraction.util.main:create_text_corpus"
train_embeddings = "profile_extraction.ner_model.train_embeddings:train_language_model"
create_dictionary = "profile_extraction.ner_model.train_embeddings:create_dictionary"
train_model = "profile_extraction.ner_model.train:train_model"
train_transformer = "profile_extraction.ner_model.train_transformer:train_model"
evaluate = "profile_extraction.ner_model.evaluate:evaluate"
create_profiles = "profile_extraction.profile_creation.main:profile_creation"
visualize_profiles = "profile_extraction.profile_visualization.main:cmd_profiles_to_html"
cluster_profiles = "profile_extraction.profile_clustering.main:cmd_cluster_profiles"
list_products = "profile_extraction.evaluation.util:cmd_list_all_products"
cluster_products = "profile_extraction.evaluation.util:cmd_cluster_products"
create_pattern_file = "profile_extraction.rule_based_pipeline.create_pattern_file:create_pattern_file"
cluster_tfidf = "profile_extraction.profile_clustering.tfidf:cmd_cluster_tf_idf"
evaluate_embeddings = "profile_extraction.evaluation.evaluate_embeddings:cmd_evaluate_embeddings"
evaluate_nn = "profile_extraction.evaluation.evaluate_nn_algorithm:cmd_eval_nn_results"

[[tool.poetry.source]]
name = "torch"
url = "https://download.pytorch.org/whl/cu113"
secondary = true
